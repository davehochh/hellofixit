<?php

/**
 * Implements hook_form_FORM_ID_alter().
 */
function md_springspray_config_form_menu_edit_item_alter(&$form, &$form_state, $form_id) {
  if (isset($form_state['build_info']['args'][0]) && $form_state['build_info']['args'][0] == 'add') {
    if (!isset($form_state['build_info']['args'][2]['menu_name']) || $form_state['build_info']['args'][2]['menu_name'] != 'main-menu') {
      return;
    }
  }
  if (isset($form_state['build_info']['args'][0]) && $form_state['build_info']['args'][0] == 'edit') {
    if (!isset($form_state['build_info']['args'][1]['menu_name']) || $form_state['build_info']['args'][1]['menu_name'] != 'main-menu') {
      return;
    }
  }
  
  $value = '';
  if ($form['mlid']['#value'] != 0) {
    $value = variable_get('md_springspray_config_icon_' . $form['mlid']['#value'], '');
  }

  $form['icon'] = array(
    '#title' => 'Icon',
    '#type' => 'select',
    '#options' => md_springspray_config_icon_list(),
    '#weight' => -1,
    '#empty_value' => 'none',
    '#default_value' => $value
  );
  $form['link_title']['#weight'] = -2;
  $form['#submit'][] = 'md_springspray_config_form_menu_edit_submit';
}

/**
 * Store class to drupal variable.
 */
function md_springspray_config_form_menu_edit_submit($form, $form_state) {
  variable_set('md_springspray_config_icon_' . $form_state['values']['mlid'], $form_state['values']['icon']);
}

/**
 * Default class for menu item
 */
function md_springspray_config_icon_list() {
  $icons = array(
    'fa-glass','fa-music','fa-search','fa-envelope-o','fa-heart','fa-star','fa-star-o','fa-user','fa-film','fa-th-large','fa-th','fa-th-list','fa-check','fa-times','fa-search-plus','fa-search-minus','fa-power-off','fa-signal','fa-gear','fa-cog','fa-trash-o','fa-home','fa-file-o','fa-clock-o','fa-road','fa-download','fa-arrow-circle-o-down','fa-arrow-circle-o-up','fa-inbox','fa-play-circle-o','fa-rotate-right','fa-repeat','fa-refresh','fa-list-alt','fa-lock','fa-flag','fa-headphones','fa-volume-off','fa-volume-down','fa-volume-up','fa-qrcode','fa-barcode','fa-tag','fa-tags','fa-book','fa-bookmark','fa-print','fa-camera','fa-font','fa-bold','fa-italic','fa-text-height','fa-text-width','fa-align-left','fa-align-center','fa-align-right','fa-align-justify','fa-list','fa-dedent','fa-outdent','fa-indent','fa-video-camera','fa-picture-o','fa-pencil','fa-map-marker','fa-adjust','fa-tint','fa-edit','fa-pencil-square-o','fa-share-square-o','fa-check-square-o','fa-arrows','fa-step-backward','fa-fast-backward','fa-backward','fa-play','fa-pause','fa-stop','fa-forward','fa-fast-forward','fa-step-forward','fa-eject','fa-chevron-left','fa-chevron-right','fa-plus-circle','fa-minus-circle','fa-times-circle','fa-check-circle','fa-question-circle','fa-info-circle','fa-crosshairs','fa-times-circle-o','fa-check-circle-o','fa-ban','fa-arrow-left','fa-arrow-right','fa-arrow-up','fa-arrow-down','fa-mail-forward','fa-share','fa-expand','fa-compress','fa-plus','fa-minus','fa-asterisk','fa-exclamation-circle','fa-gift','fa-leaf','fa-fire','fa-eye','fa-eye-slash','fa-warning','fa-exclamation-triangle','fa-plane','fa-calendar','fa-random','fa-comment','fa-magnet','fa-chevron-up','fa-chevron-down','fa-retweet','fa-shopping-cart','fa-folder','fa-folder-open','fa-arrows-v','fa-arrows-h','fa-bar-chart-o','fa-twitter-square','fa-facebook-square','fa-camera-retro','fa-key','fa-gears','fa-cogs','fa-comments','fa-thumbs-o-up','fa-thumbs-o-down','fa-star-half','fa-heart-o','fa-sign-out','fa-linkedin-square','fa-thumb-tack','fa-external-link','fa-sign-in','fa-trophy','fa-github-square','fa-upload','fa-lemon-o','fa-phone','fa-square-o','fa-bookmark-o','fa-phone-square','fa-twitter','fa-facebook','fa-github','fa-unlock','fa-credit-card','fa-rss','fa-hdd-o','fa-bullhorn','fa-bell','fa-certificate','fa-hand-o-right','fa-hand-o-left','fa-hand-o-up','fa-hand-o-down','fa-arrow-circle-left','fa-arrow-circle-right','fa-arrow-circle-up','fa-arrow-circle-down','fa-globe','fa-wrench','fa-tasks','fa-filter','fa-briefcase','fa-arrows-alt','fa-group','fa-users','fa-chain','fa-link','fa-cloud','fa-flask','fa-cut','fa-scissors','fa-copy','fa-files-o','fa-paperclip','fa-save','fa-floppy-o','fa-square','fa-bars','fa-list-ul','fa-list-ol','fa-strikethrough','fa-underline','fa-table','fa-magic','fa-truck','fa-pinterest','fa-pinterest-square','fa-google-plus-square','fa-google-plus','fa-money','fa-caret-down','fa-caret-up','fa-caret-left','fa-caret-right','fa-columns','fa-unsorted','fa-sort','fa-sort-down','fa-sort-asc','fa-sort-up','fa-sort-desc','fa-envelope','fa-linkedin','fa-rotate-left','fa-undo','fa-legal','fa-gavel','fa-dashboard','fa-tachometer','fa-comment-o','fa-comments-o','fa-flash','fa-bolt','fa-sitemap','fa-umbrella','fa-paste','fa-clipboard','fa-lightbulb-o','fa-exchange','fa-cloud-download','fa-cloud-upload','fa-user-md','fa-stethoscope','fa-suitcase','fa-bell-o','fa-coffee','fa-cutlery','fa-file-text-o','fa-building-o','fa-hospital-o','fa-ambulance','fa-medkit','fa-fighter-jet','fa-beer','fa-h-square','fa-plus-square','fa-angle-double-left','fa-angle-double-right','fa-angle-double-up','fa-angle-double-down','fa-angle-left','fa-angle-right','fa-angle-up','fa-angle-down','fa-desktop','fa-laptop','fa-tablet','fa-mobile-phone','fa-mobile','fa-circle-o','fa-quote-left','fa-quote-right','fa-spinner','fa-circle','fa-mail-reply','fa-reply','fa-github-alt','fa-folder-o','fa-folder-open-o','fa-smile-o','fa-frown-o','fa-meh-o','fa-gamepad','fa-keyboard-o','fa-flag-o','fa-flag-checkered','fa-terminal','fa-code','fa-reply-all','fa-mail-reply-all','fa-star-half-empty','fa-star-half-full','fa-star-half-o','fa-location-arrow','fa-crop','fa-code-fork','fa-unlink','fa-chain-broken','fa-question','fa-info','fa-exclamation','fa-superscript','fa-subscript','fa-eraser','fa-puzzle-piece','fa-microphone','fa-microphone-slash','fa-shield','fa-calendar-o','fa-fire-extinguisher','fa-rocket','fa-maxcdn','fa-chevron-circle-left','fa-chevron-circle-right','fa-chevron-circle-up','fa-chevron-circle-down','fa-html5','fa-css3','fa-anchor','fa-unlock-alt','fa-bullseye','fa-ellipsis-h','fa-ellipsis-v','fa-rss-square','fa-play-circle','fa-ticket','fa-minus-square','fa-minus-square-o','fa-level-up','fa-level-down','fa-check-square','fa-pencil-square','fa-external-link-square','fa-share-square','fa-compass','fa-toggle-down','fa-caret-square-o-down','fa-toggle-up','fa-caret-square-o-up','fa-toggle-right','fa-caret-square-o-right','fa-euro','fa-eur','fa-gbp','fa-dollar','fa-usd','fa-rupee','fa-inr','fa-cny','fa-rmb','fa-yen','fa-jpy','fa-ruble','fa-rouble','fa-rub','fa-won','fa-krw','fa-bitcoin','fa-btc','fa-file','fa-file-text','fa-sort-alpha-asc','fa-sort-alpha-desc','fa-sort-amount-asc','fa-sort-amount-desc','fa-sort-numeric-asc','fa-sort-numeric-desc','fa-thumbs-up','fa-thumbs-down','fa-youtube-square','fa-youtube','fa-xing','fa-xing-square','fa-youtube-play','fa-dropbox','fa-stack-overflow','fa-instagram','fa-flickr','fa-adn','fa-bitbucket','fa-bitbucket-square','fa-tumblr','fa-tumblr-square','fa-long-arrow-down','fa-long-arrow-up','fa-long-arrow-left','fa-long-arrow-right','fa-apple','fa-windows','fa-android','fa-linux','fa-dribbble','fa-skype','fa-foursquare','fa-trello','fa-female','fa-male','fa-gittip','fa-sun-o','fa-moon-o','fa-archive','fa-bug','fa-vk','fa-weibo','fa-renren','fa-pagelines','fa-stack-exchange','fa-arrow-circle-o-right','fa-arrow-circle-o-left','fa-toggle-left','fa-caret-square-o-left','fa-dot-circle-o','fa-wheelchair','fa-vimeo-square','fa-turkish-lira','fa-try','fa-plus-square-o');
  
  return array_combine($icons, $icons);
}

/**
 * @see theme_menu_link(&$vars).
 */
function md_springspray_config_preprocess_menu_link(&$vars) {
  $element = &$vars['element'];
  if ($element['#original_link']['menu_name'] == 'main-menu') {
    $icon = variable_get('md_springspray_config_icon_' . $element['#original_link']['mlid'], '');
    $element['#attributes']['icon'][] = $icon;
  }
}

/**
 * Implements hook_theme().
 */
function md_springspray_config_theme($existing, $type, $theme, $path) {
  return array(
    'springspray_supersized_banner' => array(
      'variables' => array(),
      'template' => '/templates/springspray-supersized-banner',
    ),
    'springspray_swipers_banner' => array(
      'variables' => array(),
      'template' => '/templates/springspray-swiper-banner',
    ),
    'springspray_infinity_banner' => array(
      'variables' => array(),
      'template' => '/templates/springspray-infinity-banner',
    ),
    'springspray_text_banner' => array(
      'variables' => array(),
      'template' => '/templates/springspray-text-banner',
    ),
    'springspray_gallery' => array(
      'variables' => array(),
      'template' => '/templates/springspray-gallery',
    ),
    'springspray_error' => array(
      'variables' => array(),
      'template' => '/templates/springspray-error',
    ),
  );
} 

/**
 * Implements hook_block_info().
 */
function md_springspray_config_block_info() {
  $blocks['springspray_separator'] = array(
    'info' => t('SpringSpray Separator'),
  );
  $blocks['springspray_video'] = array(
    'info' => t('SpringSpray Video'),
  );
  $blocks['springspray_supersized_banner'] = array(
    'info' => t('SpringSpray Supersized Banner'),
  );
  $blocks['springspray_swipers_banner'] = array(
    'info' => t('SpringSpray Swipers Banner'),
  );
  $blocks['springspray_infinity_banner'] = array(
    'info' => t('SpringSpray Infinity Banner'),
  );
  $blocks['springspray_text_banner'] = array(
    'info' => t('SpringSpray Text Ticker Banner'),
  );
  $blocks['springspray_gallery'] = array(
    'info' => t('SpringSpray Gallery'),
  );
  $blocks['springspray_error'] = array(
    'info' => t('SpringSpray Page Not Found'),
  );
  return $blocks;
}

/**
 * Implements hook_block_view().
 */
function md_springspray_config_block_view($delta = '') {
  $block = array();

  switch ($delta) {
    case 'springspray_separator':
      $block['subject'] = t('Separator');
      $block['content'] = array(
        '#theme' => 'springspray_separator'
      );
    break;
    case 'springspray_video':
      $block['subject'] = t('Video');
      $block['content'] = array(
        '#theme' => 'springspray_video'
      );
    break;
    case 'springspray_supersized_banner':
      $block['subject'] = t('Supersized Banner');
      $block['content'] = array(
        '#theme' => 'springspray_supersized_banner'
      );
    break;
    case 'springspray_swipers_banner':
      $block['subject'] = t('Swiper Banner');
      $block['content'] = array(
        '#theme' => 'springspray_swipers_banner'
      );
    break;
    case 'springspray_infinity_banner':
      $block['subject'] = t('Infinity Banner');
      $block['content'] = array(
        '#theme' => 'springspray_infinity_banner'
      );
    break;
    case 'springspray_text_banner':
      $block['subject'] = t('Text Ticker Banner');
      $block['content'] = array(
        '#theme' => 'springspray_text_banner'
      );
    break;
    case 'springspray_gallery':
      $block['subject'] = t('Gallery');
      $block['content'] = array(
        '#theme' => 'springspray_gallery'
      );
    break;
    case 'springspray_error':
      $block['subject'] = t('Page Not Found');
      $block['content'] = array(
        '#theme' => 'springspray_error'
      );
    break;
  }
  return $block;
}

/**
 * Implement hook_form_FORM_ID_alert().
 */
function md_springspray_config_form_ctools_block_content_type_edit_form_alter(&$form, &$form_state, $form_id) {
  global $base_url;
  $pane = $form_state['pane'];
  $display = $form_state['display'];

  $form['subtitle'] = array(
    '#type' => 'textfield',
    '#title' => t('Subtitle'),
    '#default_value' => variable_get("subtitle__{$display->uuid}_{$pane->subtype}", ''),
    '#maxlength' => 500,
    '#format' => 'full_html',
  );
  $form['#submit'][] = 'md_springspray_config_ctool_config_submit';

  if($pane->subtype == 'md_springspray_config-springspray_separator') {
    $form['sep_content'] = array(
      '#type' => 'textarea',
      '#rows' => 5,
      '#title' => t('Alternative Text'),
      '#description' => t('Enter each text per line.'),
      '#default_value' => variable_get("sep_content__{$display->uuid}_{$pane->subtype}", ''),
      '#format' => 'full_html',
    );
    $form['sep_link'] = array(
      '#type' => 'textfield',
      '#title' => t('Link to section'),
      '#default_value' => variable_get("sep_link__{$display->uuid}_{$pane->subtype}", ''),
      '#maxlength' => 500,
      '#format' => 'full_html',
    );
    $form['#submit'][] = 'md_springspray_config_ctool_sep_config_submit';  
  }

  if($pane->subtype == 'md_springspray_config-springspray_video') {
    $form['video_content'] = array(
      '#type' => 'textfield',
      '#title' => t("Embedded Code"),
      '#default_value' => variable_get("video_content__{$display->uuid}_{$pane->subtype}", ''),
    );
    $form['video_desc']  = array(                               
    '#markup' => t('Add your video code example: 67620183. <br />Vimeo code: http://vimeo.com/<b>67620183</b> <br />Youtube code: http://www.youtube.com/watch?v=<b>LFYNP40vfmE</b> <br />Copy your video code (bold) from link url and paste here!')
     );
    $form['#submit'][] = 'md_springspray_config_ctool_video_config_submit';  
  }

  $bg_image = variable_get("bg_image__{$display->uuid}_{$pane->subtype}", '');
  $limit = array(
    'views-facts-block',
    'md_springspray_config-springspray_separator',
    'views-testimonials-block',
    'webform-client-block-49'
  );
  if (in_array("{$pane->subtype}", $limit)) {
    $form['bg_effect'] = array(
      '#type' => 'select',
      '#title' => t('Background Effect Options'),
      '#options'              => array(
          'no'                => 'No Parallax',
          'yes'               => 'Has Parallax',
      ),
      '#default_value' => variable_get("bg_effect__{$display->uuid}_{$pane->subtype}", ''),
    );
    $form['bg_style'] = array(
      '#type' => 'select',
      '#title' => t('Background Image Options'),
      '#options'              => array(
          'no'                => 'No Background Image',
          'yes'               => 'Has Background Image',
      ),
      '#default_value' => variable_get("bg_style__{$display->uuid}_{$pane->subtype}", ''),
    );
    $form['bg_image'] = array(
      '#type' => 'file',
      '#title' => t('Background Image'),
    );
    $form['bg_image_path'] = array(
      '#type' => 'textfield',
      '#title' => t('Path to background image'),
      '#default_value' =>  ($bg_image) ? $bg_image['bg_image_path'] : '',
      '#prefix' => '<div style="display: none;">',
      '#suffix' => '</div>',
      '#maxlength' => 1000,
    );
    $form['bg_image_preview'] = array(
      '#markup'       => '
          <div class="form-wrapper mb-20">
              <b>'.t('Background Image Preview').'</b>
                  <div class="form-elements">
                      <div class="preview">
                          <img style="max-width: 100px;" class="img-preview" src="'.(!empty($bg_image['bg_image_path']) ? md_springspray_theme_setting_check_path($bg_image['bg_image_path']) : $base_url.'/'.drupal_get_path('theme','md_springspray').'/img/theme-settings/no_image.png').'" alt="">
                      </div>
                  </div>
                  <a href="#" class="media-select-button button element-hidden md-button">'.t('Select').'</a>
          </div>',
    );
    
    $form['#submit'][] = 'md_springspray_config_ctool_bg_style_config_submit';
  }
  
}

function md_springspray_config_ctool_config_submit(&$form, &$form_state) {
  $pane = $form_state['pane'];
  $display = $form_state['display'];
  variable_set("subtitle__{$display->uuid}_{$pane->subtype}", $form_state['values']['subtitle']);
}

function md_springspray_config_ctool_sep_config_submit(&$form, &$form_state) {
  $pane = $form_state['pane'];
  $display = $form_state['display'];
  variable_set("sep_content__{$display->uuid}_{$pane->subtype}", $form_state['values']['sep_content']);
  variable_set("sep_link__{$display->uuid}_{$pane->subtype}", $form_state['values']['sep_link']);
}

function md_springspray_config_ctool_video_config_submit(&$form, &$form_state) {
  $pane = $form_state['pane'];
  $display = $form_state['display'];
  variable_set("video_content__{$display->uuid}_{$pane->subtype}", $form_state['values']['video_content']);
}

function md_springspray_config_ctool_bg_style_config_submit(&$form, &$form_state) {
  $pane = $form_state['pane'];
  $display = $form_state['display'];
  variable_set("bg_style__{$display->uuid}_{$pane->subtype}", $form_state['values']['bg_style']);
  variable_set("bg_effect__{$display->uuid}_{$pane->subtype}", $form_state['values']['bg_effect']);
  variable_set("bg_image__{$display->uuid}_{$pane->subtype}", storeImage('bg_image_path', 'bg_image', $form_state['values']));
}

function storeImage($path, $upload, $form_state_value) {
    $validators = array('file_validate_extensions' => array('ico png gif jpg jpeg apng svg'));

    if ($image_file = file_save_upload($upload,$validators)) {

        $parts = pathinfo($image_file->filename);
        $destination = 'public://' . $parts['basename'];
        $image_file->status = FILE_STATUS_PERMANENT;
        if (file_copy($image_file, $destination, FILE_EXISTS_REPLACE)) {
            $_POST[$path] = $form_state_value[$path] = $parts['basename'];
        }
    }
    if (isset($form_state_value[$path])) {
        $file_path = $form_state_value[$path];

        $file_scheme = file_uri_scheme($path);
        if($file_scheme == 'http' || $file_scheme == 'https'){
            $newimagename = basename(rawurldecode($file_path));
            $external_file = file_get_contents(rawurldecode($file_path));
            file_save_data($external_file, 'public://'.$newimagename.'',$replace = FILE_EXISTS_REPLACE);
            $form_state_value[$path] = $newimagename;
        }
    }
    return $form_state_value;
}

function md_springspray_theme_setting_check_path($path) {
    $path_scheme = file_uri_scheme($path);
    if ($path_scheme == 'public') {
        $return_path = file_create_url($path);
    } else if (($path_scheme == 'http') || ($path_scheme == 'https')) {
        $return_path = $path;
    } else {
        $return_path = file_create_url(file_build_uri($path));
    }
    return $return_path;
}

/**
 * Implement hook_admin_paths().
 */
function md_springspray_config_admin_paths() {
  return array(
    'comment/*/edit' => 'true'
  );
}

