<?php

DEFINE('md_prtb_path', drupal_get_path('module','md_pricing_table'));
DEFINE('md_admin_path', 'admin/structure/md-pricing-table');

@require_once(md_prtb_path . '/admin/inc/md_prtb.func.inc');
@require_once(md_prtb_path . '/admin/inc/md_prtb_block.inc');
@require_once(md_prtb_path . '/admin/inc/md_prtb_field.inc');
@require_once(md_prtb_path . '/admin/inc/md_prtb_icon.inc');
@require_once(md_prtb_path . '/admin/inc/zip.inc');

function md_pricing_table_menu() {
  $md_menu = array();
  $md_menu["admin/structure/md-pricing-table"] =  array(
    "title" => "MD Pricing Table",
    "description" => "MD Pricing Table",//trs/13/menu
    "page callback" => "md_pricing_table_list",
    "access callback" => "md_pricing_access",
    "access arguments" => array("prtb admin","prtb manager"),
    "type" => MENU_NORMAL_ITEM,
  );

  $md_menu["admin/structure/md-pricing-table/manager"] =  array(
    "title" => "Manage",
    "type" => MENU_DEFAULT_LOCAL_TASK,
    "weight" => 1,
    "access callback" => "md_pricing_access",
    "access arguments" => array("prtb admin","prtb manager"),
  );

  $md_menu["admin/structure/md-pricing-table/import-export"] =  array(
    "title" => "import & export",
    "type" => MENU_LOCAL_TASK,
    "weight" => 2,
    'page callback' => 'drupal_get_form',
    'page arguments' => array('md_pricing_table_import_form'),
    "access callback" => "md_pricing_access",
    "access arguments" => array("prtb admin","prtb manager"),
  );

  $md_menu["admin/structure/md-pricing-table/export"] =  array(
    "page callback" => "md_pricing_table_export",
    //"page arguments" => array(4),
    "access callback" => "md_pricing_access",
    "access arguments" => array("prtb admin","prtb manager"),
  );

  $md_menu["admin/structure/md-pricing-table/add"] =  array(
    "title" => "Creating new MD Pricing Table",
    "description" => "add new pricing table",//trs/14
    "page callback" => "drupal_get_form",
    "page arguments" => array("md_pricing_table_add_form"),
    "access callback" => "md_pricing_access",
    "access arguments" => array("prtb admin"),
    "type" => MENU_LOCAL_ACTION
  );

  $md_menu["admin/structure/md-pricing-table/preview"] =  array(
    "page callback" => "md_pricing_table_preview",
    "access callback" => "md_pricing_access",
    "access arguments" => array("prtb admin"),
    "type" => MENU_CALLBACK
  );

  $md_menu["admin/structure/md-pricing-table/%"] =  array(
    "title" => 'Configure',
    "page callback" => "drupal_get_form",
    "load arguments" => array(3),
    "page arguments" => array('md_pricing_table_config_form',3),
    "access callback" => "md_pricing_access",
    "access arguments" => array("prtb admin", "prtb manager"),
    "type" => MENU_NORMAL_ITEM
  );

  $md_menu["admin/structure/md-pricing-table/%/edit"] =  array(
    "title" => t("Edit"),
    "description" => t("Edit for Pricing Table"),
    "page callback" => "drupal_get_form",
    "page arguments" => array('md_pricing_table_edit_form',3),
    "access callback" => "md_pricing_access",
    "access arguments" => array("prtb admin", "prtb manager"),
    "load arguments" => array(3),
    "type" => MENU_LOCAL_TASK,
  );

  $md_menu["admin/structure/md-pricing-table/%/config"] =  array(
    "title" => 'Configure',
    "type" => MENU_DEFAULT_LOCAL_TASK
  );

  $md_menu["admin/structure/md-pricing-table/%/delete"] =  array(
    "page callback" => "md_pricing_table_delete",
    "page arguments" => array(3),
    "access callback" => "md_pricing_access",
    "access arguments" => array("prtb admin"),
    "type" => MENU_NORMAL_ITEM,
  );

  $md_menu["admin/structure/md-pricing-table/%/clone"] =  array(
    "page callback" => "md_pricing_table_clone",
    "page arguments" => array(3),
    "access callback" => "md_pricing_access",
    "access arguments" => array("prtb admin", "prtb manager"),
    "type" => MENU_NORMAL_ITEM,
  );

  return $md_menu;
}

function md_pricing_table_contextual_links_view_alter(&$element, &$items) {

  if (isset($element['#element']['#block']) && ($element['#element']['#block']->module == "md_pricing_table")) {
    $md_id = $element['#element']['#block']->delta;
    $element['#links']['edit-md-pricing-table'] = array(
      'title' => 'Edit MD Pricing Table',
      'href' => url("admin/structure/md-pricing-table/{$md_id}/edit", array('absolute' => TRUE,'query' => array('destination' => $_GET['q']))),
      'weight' => -100,
    );

    $element['#links']['configure-md-pricing-table'] = array(
      'title' => 'Configure MD Pricing Table',
      'href' => url("admin/structure/md-pricing-table/{$md_id}/configure", array('absolute' => TRUE,'query' => array('destination' => $_GET['q']))),
      'weight' => -99,
    );
  }

}

function md_pricing_table_list() {
  drupal_set_title(t("MD Pricing Table | Manage"));

  //drupal_add_library("md_pricing_table", "md_prtb_admin_add");//jquery ui of pricing-table
  $md_render = '';

  $md_prtb = new MD_PRTB();

  $md_fields = array('display_block','display_field','title','machine_name','created');
  $md_datas = $md_prtb->get_all($md_fields);

  $header = array(t('Title'), array('data' => t('Operations'), 'colspan' => '4'));
  $rows = array();
  if($md_datas != null){
    foreach($md_datas as $key => $md_data){
      $r_link_clone = l("Clone",md_admin_path."/{$md_data->id}/clone");
      $r_link_edit = l("Edit",md_admin_path."/{$md_data->id}/edit");
      $r_link_config = l("Configure",md_admin_path."/{$md_data->id}/config");
      $r_link_delete = l("Delete",md_admin_path."/{$md_data->id}/delete", array('attributes' => array('onclick' => "return confirm('Are you sure you want to delete that?')")));
      $rows[$md_data->id] = array($md_data->title, $r_link_edit, $r_link_config, $r_link_clone, $r_link_delete);
    }
  }

  $md_render .= theme('table',array('header' => $header ,'rows' => $rows));
  $md_render .= theme('pager');

  return $md_render;
}

function md_pricing_table_add_form($form, &$form_state) {
  drupal_add_library('md_pricing_table','md_prtb_admin_add');
  $md_form = md_prtb_form_add($form, $form_state);
  //dsm($form_state);
  unset($md_form['submit']['save']);
  unset($md_form['submit']['save_and_edit']);
  return $md_form;
}

function md_pricing_table_add_form_validate($form, &$form_state) {

  if($form_state['input']['uid'] == 0) {
    global $user;
    $form_state['input']['uid'] = $user->uid;
  }

  $md_check_value_form = md_prtb_set_value_in_form();
  foreach($md_check_value_form as $key => $value) {
    if($form_state['input'][$key] == null) {
      $form_state['input'][$key] = 0;
    }
  }

}

function md_pricing_table_add_form_submit($form, &$form_state) {

  $md_op = $form_state['clicked_button']['#op'];
  $md_data = $form_state['input'];
  $md_prtb = new MD_PRTB();
  $md_insert = $md_prtb->insert($md_data);

  if($md_insert != 0){
   drupal_set_message('MD Pricing Table: '.$md_data['title'].' has been created.');//trs/21/
  } else {
   drupal_set_message('Error : Cannot create new item!');//trs/22/
  }

  if(($md_op == 'create_and_edit') && ($md_insert != 0)){
   drupal_goto('admin/structure/md-pricing-table/'.$md_insert.'/edit');
  } else {
   drupal_goto('admin/structure/md-pricing-table');
  }

}

function md_pricing_table_config_form($form, &$form_state, $md_id = '') {
  drupal_add_library('md_pricing_table','md_prtb_admin_add');
  $md_prtb = new MD_PRTB();
  $md_data = $md_prtb->get_by_id($md_id);
  if($md_data != false) {
    drupal_set_title(t("Configure MD Pricing Table: ".$md_data->title));
    if(count($form_state['input']) != 0) {//check value default form state
      $md_form = md_prtb_form_add($form, $form_state);
    } else {
      $form_state['input'] = get_object_vars($md_data);
      $md_form = md_prtb_form_add($form, $form_state);
    }
    $md_form['machine_name']['#machine_name']['exists'] = 'md_prtb_check_machine_name_config_form';
    $md_form['id'] = array(
      '#type' => 'hidden',
      '#default_value' => $md_data->id
    );
    $md_form['modified']['#default_value'] = time();
    unset($md_form['submit']['create']);
    unset($md_form['submit']['create_and_edit']);
    return $md_form;
  } else {
    drupal_set_message('Notice: Item do not exist or have delete!');//trs/21/
    drupal_goto(md_admin_path);
  }
}

function md_pricing_table_config_form_validate(&$form, &$form_state) {
  $md_id = $form_state['input']['id'];
  $md_machine_name = $form_state['input']['machine_name'];

  $md_prtb = new MD_PRTB();
  $md_machine_name_check = $md_prtb->md_prtb_count_machine_name_and_id($md_id ,$md_machine_name);
  if($md_machine_name_check != 0) {
    form_set_error('machine_name',t('The machine name already exists'));
  }

  $md_check_value_form = md_prtb_set_value_in_form();
  foreach($md_check_value_form as $key => $value) {
    if($form_state['input'][$key] == null) {
      $form_state['input'][$key] = 0;
    }
  }

}

function md_pricing_table_config_form_submit($form, &$form_state) {
  $md_update_data = $form_state['input'];
  $md_id = $md_update_data['id'];
  $md_op = $form_state['clicked_button']['#op'];

  unset($md_update_data['id']);
  unset($md_update_data['form_build_id']);
  unset($md_update_data['form_token']);
  unset($md_update_data['form_id']);
  unset($md_update_data['op']);
  unset($form_state['input']['id']);

  $md_prtb = new MD_PRTB();
  $md_update_check = $md_prtb->update($md_id, $md_update_data);
  if($md_update_check != 0){
    drupal_set_message('MD Pricing Table: '.$md_update_data['title'].' has been updated configurations.');//trs/36/
  } else {
    drupal_set_message('Error: cannot update configurations!');//trs/37/
  }

  if($md_op == 'save'){
    drupal_goto('admin/structure/md-pricing-table');
  } else {
    if(isset($_GET['destination'])) {
      $_GET['destination'] = null;
    }
    drupal_goto('admin/structure/md-pricing-table/'.$md_id.'/edit');
  }
}

function md_pricing_table_edit_form($form, &$form_state, $md_id = '') {
  //drupal_add_js("http://maps.googleapis.com/maps/api/js");
  drupal_add_library('md_pricing_table','md_prtb_admin_edit');
  md_prtb_fix_media();
  $md_prtb_icon = md_prtb_icon_load();
  $md_prtb_img_style = md_prtb_img_style_load();
  $prtb_data = array('img_style' => $md_prtb_img_style,'icon' => $md_prtb_icon,'md_path' => md_prtb_path);

  $md_prtb = new MD_PRTB();
  $md_data = $md_prtb->get_by_id($md_id);
  //dsm($md_data);
  if($md_data != false) {
    drupal_set_title(t("Edit MD Pricing Table: ".$md_data->title));
    $wdt_json_data = $md_data->content;
    //dsm(drupal_json_decode($wdt_json_data));
    unset($md_data->content);

    $wdt_json_setting = drupal_json_encode($md_data);
    drupal_add_js(array('md_pricing_table' => array(
      'wdt_json_data' => $wdt_json_data,
      'wdt_json_setting' => $wdt_json_setting,
    )), array('type' => 'setting'));

    $md_form['markup'] = array(
      "#markup" => theme("md_prtb_admin_edit", array('prtb_data' => $prtb_data)),
      "#weight" => -1
    );

    $md_form['modified']['#default_value'] = time();

    $md_form['id'] = array(
      '#type' => 'hidden',
      '#default_value' => $md_id
    );

    $md_form['md_prtb_data'] = array(
      '#type' => 'hidden',
      '#name' => 'md_prtb_data',
      '#default_value' => t('walle_data_in_here'),
      '#attributes' => array('class' => array('md_prtb_json_data'))
    );

    $md_form['custom_class_fid'] = array(
      '#type' => 'hidden',
      '#default_value' => $md_data->custom_class_fid
    );

    $md_form['style_name'] = array(
      '#type' => 'hidden',
      '#default_value' => $md_data->style_name
    );

    $md_form['title'] = array(
      '#type' => 'hidden',
      '#default_value' => $md_data->title
    );

    $md_form['md_data_custom_class'] = array(
      '#type' => 'hidden',
      '#default_value' => '',
      '#attributes' => array(
        'class' => array(
          'md-data-custom-class'
        )
      )
    );

    $md_form['submit']['save'] = array(
      "#type" => "submit",
      "#value" => "Save",
      "#op" => "save",
      '#attributes' => array('class' => array('md_prtb_add_submit'))
    );

    $md_form['submit']['save_and_edit'] = array(
      "#type" => "submit",
      "#value" => "Save & Continue",
      "#op" => "save_and_edit",
      '#attributes' => array('class' => array('md_prtb_add_submit'))
    );

    // $md_form['submit']['preview'] = array(
    //   "#type" => "submit",
    //   "#value" => "Preview",
    //   "#op" => "preview",
    //   '#attributes' => array('class' => array('md_prtb_preview'))
    // );

    return $md_form;
  } else {
    drupal_set_message('Notice: Item do not exist or have delete!');//trs/21/
    drupal_goto(md_admin_path);
  }
}

function md_pricing_table_edit_form_validate($form, &$form_state) {

}

function md_pricing_table_edit_form_submit($form, &$form_state) {
  //dsm($form_state['input']);
  $md_data_update = array();
  $md_op = $form_state['clicked_button']['#op'];
  $md_id = $form_state['input']['id'];
  $md_title = $form_state['input']['title'];
  $md_css_fid = $form_state['input']['custom_class_fid'];
  $md_css_content = $form_state['input']['md_data_custom_class'];
  $md_data_update['css_content'] = $form_state['input']['md_data_custom_class'];

  $wle_css_file = file_load($md_css_fid);
  if($wle_css_file == false) {
    $md_css_save = file_save_data($md_css_content, 'public://prtb_css_'.time().'.css', FILE_EXISTS_RENAME);
  } else {
    $md_css_save = file_save_data($md_css_content, $wle_css_file->uri, FILE_EXISTS_REPLACE);
  }

  $md_prtb = new MD_PRTB();
  $md_data_update['content'] = $form_state['input']['md_prtb_data'];
  $md_data_update['custom_class_fid'] = $md_css_save->fid;
  $md_data_update['modified'] = time();

  $md_update = $md_prtb->update($md_id, $md_data_update);
  if($md_update == 1){
    drupal_set_message('MD Pricing Table: '.$md_title.' has been saved.');//trs/24/
  } else {
    drupal_set_message('MD Pricing Table:  Error: Cannot save '.$md_title.'.');//trs/25/
  }

  if($md_op == 'save') {
    drupal_goto('admin/structure/md-pricing-table');
  } else {
    if(isset($_GET['destination'])) {
      $_GET['destination'] = null;
    }
    drupal_goto('admin/structure/md-pricing-table/'.$md_id.'/edit');
  }

}

function md_pricing_table_preview() {
  global $base_url;
  $md_render = '';
  $md_data_input = $_POST;
  $md_setting = drupal_json_decode($md_data_input['setting']);
  $style_name = $md_setting['style_name'];
  $md_content = drupal_json_decode($md_data_input['data_content']);
  $md_css = $md_data_input['data_css'];

  $md_theme_registry = theme_get_registry();

  if(isset($md_theme_registry[$style_name])) {
    $md_render .= '<style type="text/css">';
    $md_render .= $md_css;
    $md_render .= '</style>';
    $md_render .= '<link rel="stylesheet" href="'.$md_theme_registry[$style_name]['variables']['css'].'" type="text/css" />';
    //$md_render .= '<script type="text/javascript" src="'.md_prtb_path.'/admin/js/pricing-front-end.js"></script>';
    $md_render .= theme($style_name,array('machine_name' => $md_setting['machine_name'],'settings' => $md_setting, 'md_data' => $md_content));
  } else {
    $md_render = 'Theme style for Md Pricing Table do not exist!';
  }

  print $md_render;
}

function md_pricing_table_delete($md_id = null){

  if($md_id != null) {
    $md_prtb = new MD_PRTB();
    $md_data = $md_prtb->get_by_id($md_id);
    $md_check = $md_prtb->delete($md_id);
    $md_load_file = file_load($md_data->custom_class_fid);
    if($md_load_file) {
      file_delete($md_load_file);

    }

    if($md_check){
      drupal_set_message(t(" MD Pricing Table: '{$md_data->title}' has been deleted "));//trs/38/
    } else {
      drupal_set_message(t("Error: Cannot delete the item!"));//trs/39/
    }
  }
  drupal_goto(md_admin_path);
}

function md_pricing_table_clone($md_id = null) {
  $md_prtb = new MD_PRTB;
  $md_data = $md_prtb->get_by_id($md_id);

  if($md_data == false){
    drupal_set_message('Item does not exsit!');//trs/40/
  } else {
    $md_data_insert = get_object_vars($md_data);//created data for item clone
    $md_data_insert['title'] = 'Clone of : '.$md_data_insert['title'];
    if(strlen($md_data_insert['title']) > 255) {//check length for title
      $md_data_insert['title'] = 'clone - Md Pricing Table at : '.format_date(time(),'custom','F j, Y');
    }
    $md_data_insert['created'] = time();//set time created
    $md_data_insert['modified'] = time();

    unset($md_data_insert['id']);//unset id for item
    $md_insert_check = $md_prtb->insert($md_data_insert);//insert
    if($md_insert_check != 0) {
      $md_machine_name = $md_data_insert['machine_name'].$md_insert_check;
      if(strlen($md_machine_name) > 30) {//check length machine name
        $md_machine_name = 'mdprtb'.time();
      }
      $md_machine_name_check = $md_prtb->md_prtb_count_machine_name($md_machine_name);
      if($md_machine_name_check != 0) {
        $md_machine_name = 'mdprtb'.time();
      }
      $md_prtb->update($md_insert_check, array('machine_name' => $md_machine_name));//update machine name
      drupal_set_message('Clone pass:'.$md_data->title);
    } else {
      drupal_set_message('Clone fail!');
    }
  }
  drupal_goto('admin/structure/md-pricing-table');
}

function md_pricing_access($role1 = null, $role2 = null) {
  $roles = array(0 => $role1, 1 => $role2);
  foreach($roles as $key => $role) {
    if(($role != null) && (user_access($role)) ){
      return true;
    }
  }

  return false;
}

function md_pricing_table_permission() {
  return array(
    'prtb admin' => array(
      'title' => t('Administer MD Pricing Table'),//trs/46/permission: quyền quản trị trên md pricing table
      'description' => t('Administer MD Pricing Table'),//trs/47/permission toàn quyền thao tác trên các chức năng của md pricing table
    ),
    'prtb manager' => array(
      'title' => t('Manager MD Pricing Table'),//trs/48/permission quản lý các item của md pricing table
      'description' => t('Manager MD Pricing Table')//trs/49/permission có quyền chỉnh sửa nội dung và cấu hình lại các item
    )
  );
}

function md_pricing_table_library() {
  $md_path_css = md_prtb_path.'/admin/css';
  $md_path_images = md_prtb_path.'/admin/images';
  $md_path_inc = md_prtb_path.'/admin/inc';
  $md_path_js = md_prtb_path.'/admin/js';
  $md_path_tpl = md_prtb_path.'/admin/tpl';

  $md_lib = array();

  $md_lib['md_prtb_admin_add'] = array(
    'title' => t('CSS & JS for list'),
    'version' => '1.0',
    'js' => array(
      $md_path_js.'/jquery-ui-1.10.4.js' => array('weight' => -1),
      $md_path_js.'/spectrum.js' => array(),
      $md_path_js.'/md-prtb-admin.js' => array(),
    ),
    'css' => array(
      $md_path_css.'/spectrum.css'  => array(),
      $md_path_css.'/md_prtb_admin.css'  => array(),
      $md_path_css.'/jquery_ui.css'  => array(),
    )
  );

  $md_lib['md_prtb_admin_edit'] = array(
    'title' => t('CSS & JS for edit'),
    'version' => '1.0',
    'js' => array(
      $md_path_js.'/jquery-ui-1.10.4.js' => array('weight' => -1),
      $md_path_js.'/spectrum.js' => array(),
      $md_path_js.'/md-prtb-admin.js' => array(),
      $md_path_js.'/drupal-main.js' => array(),
      $md_path_js.'/drupal-process-confirm.js' => array(),
      $md_path_js.'/pricing-main.js' => array(),
      $md_path_js.'/pricing-function.js' => array(),
      $md_path_js.'/pricing-process-header.js' => array(),
      $md_path_js.'/pricing-process-price.js' => array(),
      $md_path_js.'/pricing-process-body.js' => array(),
      $md_path_js.'/pricing-process-footer.js' => array(),
      $md_path_js.'/pricing-process-request-drupal.js' => array(),
      $md_path_js.'/pricing-process-setting.js' => array(),
      $md_path_js.'/pricing-save-data-json.js' => array(),
      $md_path_js.'/pricing-table.js' => array(),
      $md_path_js.'/pricing-front-end.js' => array(),

    ),
    'css' => array(
      $md_path_css.'/spectrum.css'  => array(),
      $md_path_css.'/md_prtb_admin_edit.css'  => array("group" => CSS_THEME, "weight" => '50'),
      $md_path_css.'/validate.css'  => array(),
    )
  );

  return $md_lib;
}

function md_pricing_table_library_alter(&$libraries, $module){
  //dsm($libraries);
  if(strpos(current_path(),'md-pricing-table') !== false) {
    if(isset($libraries['jquery'])) {
      $libraries['jquery'] = null;
      $libraries['jquery']['title'] = 'jQuery';
      $libraries['jquery']['website'] = 'http://jquery.com';
      $libraries['jquery']['version'] = '1.9';
      $libraries['jquery']['js']['misc/jquery.js']['data'] = md_prtb_path.'/admin/js/jquery-1.9.js';
      $libraries['jquery']['js']['misc/jquery.js']['group'] = '-100';
      $libraries['jquery']['js']['misc/jquery.js']['weight'] = '-20';
    }
  }
}

function md_pricing_table_js_alter(&$js) {
  if(strpos(current_path(),'md-pricing-table') !== false) {
    $js_remove = array(
      'core.min',
      'widget.min',
      'mouse.min',
      'resizable.min',
      'draggable.min',
      'button.min',
      'position.min',
      'dialog.min'
    );
    foreach($js_remove as $key => $value){
      $value = 'misc/ui/jquery.ui.'.$value.'.js';
      unset($js[$value]);
    }
  }
}

function md_pricing_table_theme() {
  $md_theme = array();
  $md_style_scan = array();
  $md_path_theme = drupal_get_path('theme', variable_get('theme_default', NULL));

  array_push($md_style_scan, md_prtb_path.'/templates');
  array_push($md_style_scan, $md_path_theme);
  $md_styles = md_prtb_scan_style($md_style_scan);

  if(count($md_styles) != 0) {
    foreach($md_styles as $key => $style) {
      $md_theme[$style['name']] = array(
        'template' => $style['tpl'],
        'variables' => array(
          'machine_name' => '',
          'css' => $style['path'].'/'.$style['css'],
          'settings' => '',
          'md_data' => '',
        ),
        'path' => $style['path'],
        'pattern' => $style['name'].'__',
        'file' => $style['inc'],
      );
    }
  }

  $md_theme['md_prtb_admin_edit'] = array(
    'template' => 'md_prtb_admin_edit',
    'variables' => array('prtb_data' => ''),
    'path' => md_prtb_path . '/admin/tpl',
  );

  return $md_theme;
}

function md_pricing_table_import_form($form, &$form_state) {
  drupal_set_title(t("MD Pricing Table | Import & Export"));
  $md_prtb = new MD_PRTB();
  $md_fields = array('display_block','display_field','title','machine_name','created');
  $md_datas = $md_prtb->get_all($md_fields);

  $md_list = array();
  if($md_datas != null) {
    foreach($md_datas as $key => $md_data) {
      $md_list[$md_data->id] = format_date($md_data->created,'custom','H:m F j, Y').' | '.$md_data->title;
    }
  }

  $md_form = array();

  $md_form['import_option'] = array(
    '#type' => 'fieldset',
    '#title' => 'Import file',
    '#weight' => 1
  );

  $md_form['import_option']['file_import'] = array(
    '#type' => 'file',
    '#title' => t('File Zip'),
    '#description' => t('Upload a file, allowed extensions: Md_prtb_export_*.zip'),
  );


  $md_form['import_option']['submit'] = array(
    '#type' => 'submit',
    '#value' => 'Import',
    '#op' => 'md_import'
  );

  $md_form['export_option'] = array(
    '#type' => 'fieldset',
    '#title' => 'select items to export',
    '#weight' => 2,

  );

  $md_form['export_option']['select_items'] = array(
    '#type' => 'checkboxes',
    '#options' => $md_list,
    '#prefix' => '<div id="md-prtb-items" style="margin: 0px 0px 20px 0px;">',
    '#suffix' => '</div>',
  );

  $md_form['export_option']['items_page'] = array(
    '#markup' => theme('pager')
  );

  $md_form['export_option']['submit'] = array(
    '#type' => 'button',
    '#value' => 'Export',
    '#attributes' => array(
      'id' => 'md-prtb-submit-export'
    ),
    '#op' => 'md_export',
    '#attached' => array(
      'js' => array(
        md_prtb_path . '/admin/js/md-prtb-admin.js',
      )
    )
  );

  return $md_form;
}

function md_pricing_table_import_form_validate($form, &$form_state) {
  if (isset($_FILES["files"]["name"]) && !empty($_FILES["files"]["name"])) {
    $file = file_save_upload("file_import", array("file_validate_extensions" => array("zip")));
    // If the file passed validation:
    if ($file) {
      // Move the file into the Drupal file system.
      if ($file = file_move($file, 'public://')) {
        // Save the file for use in the submit handler.
        $form_state['values']['file_import'] = $file;
      }
      else {
        form_set_error('file_import', t("Failed to write the uploaded file to the site's file folder."));
      }
    }
    else {
      form_set_error('file_import', t('No file was uploaded.'));
    }
  } else {
    form_set_error("file_import", t("No file was uploaded."));
  }
}

function md_pricing_table_import_form_submit($form, &$form_state) {
  $md_op = $form_state['clicked_button']['#op'];

  if($md_op == 'md_import') {
    $md_file_import = $form_state["values"]["file_import"];
    $md_import = array(
      'md_image' => array(),
      'md_style' => image_styles(),
      'data_import' => null,
      'md_report' => ''
    );

    if($md_file_import != null) {
      $md_file = drupal_realpath($md_file_import->uri);
      $md_open_file = zip_open($md_file);
      $md_time = time();
      while (($md_entry = zip_read($md_open_file))) {
        $md_entry_name = zip_entry_name($md_entry);
        if ($md_entry_name == "images/")
          continue;

        if (strpos($md_entry_name, "images/") !== FALSE) {
          $md_img_temp = explode('/',$md_entry_name);
          $md_img_name_new = $md_time.$md_img_temp[1];
          $md_image_fid_old = explode('.', $md_img_temp[1]);
          zip_entry_open($md_open_file, $md_entry);
          $md_entry_content = zip_entry_read($md_entry, zip_entry_filesize($md_entry));
          $md_image_insert_info = file_save_data($md_entry_content, "public://{$md_img_name_new}", FILE_EXISTS_RENAME);
          if($md_image_insert_info != null) {//load image info when insert finish
            $md_img_url = file_create_url($md_image_insert_info->uri);
            $md_image_theme_render = '<img src="'.$md_img_url.'" width="180" height="180">';
            $md_image_insert_info->preview = '<div class="media-item"><div class="media-thumbnail">'.$md_image_theme_render.'</div></div>';
            $md_image_insert_info->img_url = $md_img_url;
            $md_import['md_image'][$md_image_fid_old[0]] = get_object_vars($md_image_insert_info);
          }
        }

        if (strpos($md_entry_name, ".txt") !== FALSE) {
          $md_content_temp = zip_entry_read($md_entry, zip_entry_filesize($md_entry));
          $md_import['data_import'] = unserialize($md_content_temp);
        }
      }
    }

    if($md_import['data_import'] != null) {//start insert data
      $md_report = '';
      global $user;
      //insert content in database
      if(count($md_import['data_import']['data']) != 0) {
        foreach($md_import['data_import']['data'] as $md_data_pre_key => $md_data_pre_value ) {
          //change uid
          $md_data_pre_value['uid'] = $user->uid;
          //change time created vs modified
          $md_data_pre_value['created'] = time();
          $md_data_pre_value['modified'] = $md_data_pre_value['created'];
          //check machine name when to before insert
          $md_machine_name_check = md_prtb_check_machine_name($md_data_pre_value['machine_name']);
          if($md_machine_name_check) {//repair machine name
            $md_machine_name_new = 'mdprtb'.time().$md_data_pre_key;
            $md_report .= 'Machine name : "'.$md_data_pre_value['machine_name'].'" exist -> change : '.$md_machine_name_new.'<br>';
            $md_data_pre_value['machine_name'] = $md_machine_name_new;
          }
          //repair content
          if(count($md_data_pre_value['content']) != 0) {
            $md_prtb = new MD_PRTB();
            foreach($md_data_pre_value['content'] as $md_content_key => $md_content_value ) {
              //repair fid in image header
              if(isset($md_content_value['json_header']['images']['fid']) && ($md_content_value['json_header']['images']['fid'] != '')) {
                $md_img_fid_old = $md_content_value['json_header']['images']['fid'];
                if(isset($md_import['md_image'][$md_img_fid_old])) {
                  $md_content_value['json_header']['images']['fid'] = $md_import['md_image'][$md_img_fid_old]['fid'];
                  $md_content_value['json_header']['images']['preview'] = $md_import['md_image'][$md_img_fid_old]['preview'];
                  $md_content_value['json_header']['images']['img_url'] = $md_import['md_image'][$md_img_fid_old]['img_url'];
                }
              }
              //repair fid in map header
              if(isset($md_content_value['json_header']['map']['map_fId']) && ($md_content_value['json_header']['map']['map_fId'] != '')) {
                $md_img_fid_old = $md_content_value['json_header']['map']['map_fId'];
                if(isset($md_import['md_image'][$md_img_fid_old])) {
                  $md_content_value['json_header']['map']['map_fId'] = $md_import['md_image'][$md_img_fid_old]['fid'];
                  $md_content_value['json_header']['map']['map_preview'] = $md_import['md_image'][$md_img_fid_old]['preview'];
                }
              }
              $md_data_pre_value['content'][$md_content_key]  = $md_content_value;
            }
          }

          $md_data_pre_value['content'] = drupal_json_encode($md_data_pre_value['content']);
          $md_data_pre_value['custom_class_fid'] = 0;
          $md_check_insert = $md_prtb->insert($md_data_pre_value);
          //$md_check_insert = 1;
          if($md_check_insert != 0) {
            $md_report .= 'Import item title : "'.$md_data_pre_value['title'].'" -> pass <br>';
          } else {
            $md_report .= 'Import item title : "'.$md_data_pre_value['title'].'" -> fail <br>';
          }
        }
      }
      //check error for style image
    }

    if(isset($md_import['data_import']['image_style']) && (count($md_import['data_import']['image_style']) != 0)) {
      foreach($md_import['data_import']['image_style'] as $md_img_style_name => $md_img_style_value) {
        if(!isset($md_import['md_style'][$md_img_style_name])) {
          $md_report .= 'Style name : "'.$md_img_style_name.'" do not exist'.'<br>';
        }
      }
    }
    $md_import['md_report'] = $md_report;
    drupal_set_message($md_import['md_report']);
  } else {
    drupal_goto('admin/structure/md-pricing-table/import-export');
  }
}

function md_pricing_table_export() {
  $md_get = $_GET;
  $md_list = array();//list for items
  $md_datas = array();//data for items
  $md_style_image_load = image_styles();
  if(isset($md_get['md_export']) && strlen($md_get['md_export']) != 0) {
    $md_list = explode(',', $md_get['md_export']);
  }

  if(count($md_list) != 0) {
    $md_prtb = new MD_PRTB();
    $md_datas = $md_prtb->get_for_export($md_list);//get all item select list
  }

  if(count($md_datas) != 0) {
    $md_export_image_fid = array();
    $md_export_image_style = array();
    $md_export_data = array();
    $md_export = array(
      'data' => array(),//all data items
      'image_fid' => array(),//all fid of image
      'image_style' => array()//all style for image
    );

    foreach($md_datas as $md_key => $md_data) {
      $md_export_data[$md_key] = get_object_vars($md_data);
      $md_export_data[$md_key]['custom_class_fid'] = 0;
      $md_export_data[$md_key]['content'] = drupal_json_decode($md_export_data[$md_key]['content']);
      unset($md_export_data[$md_key]['id']);

      $md_content = $md_export_data[$md_key]['content'];
      if(count($md_content) != 0) {
        foreach($md_content as $key_content => $value_content) {
          //check fid exist in image
          if(isset($value_content['json_header']['images']['preview']) && ($value_content['json_header']['images']['preview'] != '')) {
            $md_fid = $value_content['json_header']['images']['fid'];
            $md_load_file = file_load($md_fid);
            if($md_load_file != null) {
              $md_style_image = $value_content['json_header']['images']['img_style'];
              if(isset($md_style_image_load[$md_style_image])) {
                $md_export_image_style[$md_style_image] = $md_style_image_load[$md_style_image];
              }
              $md_export_image_fid[$md_fid] = get_object_vars($md_load_file);
            }
          }
          //check fid exist in image map
          if(isset($value_content['json_header']['map']['map_preview']) && ($value_content['json_header']['map']['map_preview'] != '')) {
            $md_fid = $value_content['json_header']['map']['map_fId'];
            $md_load_file = file_load($md_fid);
            if($md_load_file != null) {
              $md_export_image_fid[$md_fid] = get_object_vars($md_load_file);
            }
          }
        }
      }
    }

    //dsm($md_export_data);

    $md_export['data'] = $md_export_data;
    $md_export['image_fid'] = $md_export_image_fid;
    $md_export['image_style'] = $md_export_image_style;

    $md_zip_name = 'MD_prtb_export_'.time();//created name for file zip
    $md_zip =  new prtb_zip();
    $md_zip->addDirectory("images");

    if(count($md_export['image_fid']) != 0) {
      foreach($md_export['image_fid'] as $key_3 => $img_info) {
        $img_type_temp = explode('.', $img_info['filename']);
        //add image to zip
        $md_zip->addFile(file_get_contents($img_info['uri']), "images/".$img_info['fid'].".".end($img_type_temp));
      }
    }

    unset($md_export['image_fid']);
    $md_zip->addFile(serialize($md_export), $md_zip_name.'.txt');
    $md_zip->sendZip($md_zip_name . '.zip');
  }
}

function md_pricing_table_page_alter(&$page) {

}
